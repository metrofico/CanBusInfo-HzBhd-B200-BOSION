package com.hzbhd.canbus.car._322;

import android.content.Context;
import android.util.Log;
import com.hzbhd.R;
import com.hzbhd.canbus.car._322.ActivePark;
import com.hzbhd.canbus.car._322.MsgMgr;
import com.hzbhd.canbus.msg_mgr.AbstractMsgMgr;
import com.hzbhd.canbus.util.CommUtil;
import com.hzbhd.constant.disc.MpegConstantsDef;
import java.util.Map;
import kotlin.Metadata;
import kotlin.TuplesKt;
import kotlin.collections.MapsKt;
import kotlin.jvm.internal.Intrinsics;
import nfore.android.bt.res.NfDef;

/* compiled from: MsgMgr.kt */
@Metadata(d1 = {"\u0000%\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010$\n\u0002\u0010\b\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0002\b\u0002*\u0001\u0000\b\n\u0018\u00002\u00060\u0001R\u00020\u0002J\u0010\u0010\u0007\u001a\u00020\b2\u0006\u0010\t\u001a\u00020\u0005H\u0016R\u001a\u0010\u0003\u001a\u000e\u0012\u0004\u0012\u00020\u0005\u0012\u0004\u0012\u00020\u00060\u0004X\u0082\u0004¢\u0006\u0002\n\u0000¨\u0006\n"}, d2 = {"com/hzbhd/canbus/car/_322/MsgMgr$initParsers$1$15", "Lcom/hzbhd/canbus/car/_322/MsgMgr$Parser;", "Lcom/hzbhd/canbus/car/_322/MsgMgr;", "mUpdateBeamArray", "", "", "Lcom/hzbhd/canbus/car/_322/ActivePark$UpdateBeam;", "parse", "", "dataLength", "CanBusInfo_release"}, k = 1, mv = {1, 7, 1}, xi = 48)
/* loaded from: classes2.dex */
public final class MsgMgr$initParsers$1$15 extends MsgMgr.Parser {
    final /* synthetic */ Context $context;
    private final Map<Integer, ActivePark.UpdateBeam> mUpdateBeamArray;
    final /* synthetic */ MsgMgr this$0;

    /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
    MsgMgr$initParsers$1$15(MsgMgr msgMgr, Context context) {
        super(msgMgr, "【0x50】泊车辅助状态信息");
        this.this$0 = msgMgr;
        this.$context = context;
        this.mUpdateBeamArray = MapsKt.mapOf(TuplesKt.to(2, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_02)), TuplesKt.to(3, new ActivePark.UpdateBeam(R.string._81_active_park, R.string._81_active_park_03, ActivePark.ActiveParkElement.WARNING)), TuplesKt.to(4, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_02)), TuplesKt.to(5, new ActivePark.UpdateBeam(R.string._81_active_park, R.string._322_active_park_05, ActivePark.ActiveParkElement.FLAG)), TuplesKt.to(6, new ActivePark.UpdateBeam(R.string._81_active_park, R.string.geely_e6_item_4, R.string._322_active_park_06, ActivePark.ActiveParkElement.WARNING)), TuplesKt.to(8, new ActivePark.UpdateBeam(R.string._81_active_park, R.string._322_active_park_08_1, R.string._322_active_park_08_2, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(9, new ActivePark.UpdateBeam(R.string._81_active_park, R.string.ford_park_assist_0x20, R.string._322_active_park_06, ActivePark.ActiveParkElement.WARNING)), TuplesKt.to(10, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_0a, ActivePark.ActiveParkElement.FLAG)), TuplesKt.to(11, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_0a, ActivePark.ActiveParkElement.FLAG)), TuplesKt.to(12, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_0c, ActivePark.ActiveParkElement.FLAG)), TuplesKt.to(13, new ActivePark.UpdateBeam(R.string._81_active_park, R.string._322_active_park_0d, ActivePark.ActiveParkElement.WARNING)), TuplesKt.to(14, new ActivePark.UpdateBeam(R.string._81_active_park, R.string._322_active_park_0e, ActivePark.ActiveParkElement.WARNING)), TuplesKt.to(15, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_0f_1, R.string._322_active_park_0f_2, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(16, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_10_1, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_FRONT)), TuplesKt.to(17, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_0f_1, R.string._322_active_park_11, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(18, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_12, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_BACK)), TuplesKt.to(19, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_0f_1, R.string._322_active_park_0f_2, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(20, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_10_1, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_FRONT)), TuplesKt.to(21, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_0f_1, R.string._322_active_park_11, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(22, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_12, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_BACK)), TuplesKt.to(23, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_0f_1, R.string._322_active_park_0f_2, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(24, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_10_1, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_FRONT)), TuplesKt.to(25, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_0f_1, R.string._322_active_park_11, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(26, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_12, R.string._322_active_park_10_2, ActivePark.ActiveParkElement.ARROW_BACK)), TuplesKt.to(27, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_1b, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_RIGHT, ActivePark.ActiveParkElement.ARROW_LEFTT})), TuplesKt.to(28, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_1c, R.string._322_active_park_11, ActivePark.ActiveParkElement.ARROW_RIGHT)), TuplesKt.to(29, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_1c, R.string._322_active_park_11, ActivePark.ActiveParkElement.ARROW_LEFTT)), TuplesKt.to(30, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_1c, R.string._322_active_park_0f_2, ActivePark.ActiveParkElement.ARROW_RIGHT)), TuplesKt.to(31, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._322_active_park_1c, R.string._322_active_park_0f_2, ActivePark.ActiveParkElement.ARROW_LEFTT)), TuplesKt.to(32, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_20_1, R.string._322_active_park_20_1, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_RIGHT})), TuplesKt.to(33, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_21_1, R.string._322_active_park_21_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_LEFTT})), TuplesKt.to(50, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_32_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_RIGHT, ActivePark.ActiveParkElement.WALL_PARALLEL_RIGHT, ActivePark.ActiveParkElement.SPACE_PARALLEL_RIGHT, ActivePark.ActiveParkElement.FIND_RIGHT})), TuplesKt.to(51, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_32_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_LEFTT, ActivePark.ActiveParkElement.WALL_PARALLEL_LEFTT, ActivePark.ActiveParkElement.SPACE_PARALLEL_LEFTT, ActivePark.ActiveParkElement.FIND_LEFTT})), TuplesKt.to(66, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_0f_1, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.RADAR_RIGHT, ActivePark.ActiveParkElement.WALL_PARALLEL_RIGHT, ActivePark.ActiveParkElement.SPACE_PARALLEL_RIGHT, ActivePark.ActiveParkElement.FIND_RIGHT})), TuplesKt.to(67, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_0f_1, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.RADAR_LEFTT, ActivePark.ActiveParkElement.WALL_PARALLEL_LEFTT, ActivePark.ActiveParkElement.SPACE_PARALLEL_LEFTT, ActivePark.ActiveParkElement.FIND_LEFTT})), TuplesKt.to(80, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(82, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.WALL_PARALLEL_RIGHT, ActivePark.ActiveParkElement.SPACE_PARALLEL_RIGHT, ActivePark.ActiveParkElement.LINE_PARALLEL_RIGHT})), TuplesKt.to(83, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.WALL_PARALLEL_LEFTT, ActivePark.ActiveParkElement.SPACE_PARALLEL_LEFTT, ActivePark.ActiveParkElement.LINE_PARALLEL_LEFTT})), TuplesKt.to(96, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_20_1, R.string._322_active_park_20_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_RIGHT})), TuplesKt.to(97, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_21_1, R.string._322_active_park_21_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_LEFTT})), TuplesKt.to(130, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_32_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_RIGHT, ActivePark.ActiveParkElement.WALL_VERTICAL_RIGHT_FORWARD, ActivePark.ActiveParkElement.SPACE_VERTICAL_RIGHT, ActivePark.ActiveParkElement.FIND_RIGHT})), TuplesKt.to(131, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_32_2, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.ARROW_FRONT, ActivePark.ActiveParkElement.RADAR_LEFTT, ActivePark.ActiveParkElement.WALL_VERTICAL_LEFTT_FORWARD, ActivePark.ActiveParkElement.SPACE_VERTICAL_LEFTT, ActivePark.ActiveParkElement.FIND_LEFTT})), TuplesKt.to(Integer.valueOf(MpegConstantsDef.MPEG_INFO_AUDIO_CFM), new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_0f_1, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.RADAR_RIGHT, ActivePark.ActiveParkElement.WALL_VERTICAL_RIGHT_STOP_LINE, ActivePark.ActiveParkElement.SPACE_VERTICAL_RIGHT, ActivePark.ActiveParkElement.FIND_RIGHT})), TuplesKt.to(Integer.valueOf(MpegConstantsDef.MPEG_INFO_SUBTITLE_CFM), new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_0f_1, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.RADAR_LEFTT, ActivePark.ActiveParkElement.WALL_VERTICAL_LEFTT_STOP_LINE, ActivePark.ActiveParkElement.SPACE_VERTICAL_LEFTT, ActivePark.ActiveParkElement.FIND_LEFTT})), TuplesKt.to(192, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(194, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.WALL_VERTICAL_RIGHT_STOP_LINE, ActivePark.ActiveParkElement.SPACE_VERTICAL_RIGHT, ActivePark.ActiveParkElement.LINE_VERTICAL_RIGHT})), TuplesKt.to(195, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_32_1, R.string._322_active_park_50, new ActivePark.ActiveParkElement[]{ActivePark.ActiveParkElement.STOP, ActivePark.ActiveParkElement.WALL_VERTICAL_LEFTT_STOP_LINE, ActivePark.ActiveParkElement.SPACE_VERTICAL_LEFTT, ActivePark.ActiveParkElement.LINE_VERTICAL_LEFTT})), TuplesKt.to(Integer.valueOf(NfDef.STATE_3WAY_M_HOLD), new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._29_right_side, ActivePark.ActiveParkElement.ARROW_RIGHT)), TuplesKt.to(241, new ActivePark.UpdateBeam(R.string._94_parallel_berth_out, R.string._29_left_side, ActivePark.ActiveParkElement.ARROW_LEFTT)), TuplesKt.to(246, new ActivePark.UpdateBeam(R.string._94_parallel_parking, R.string._322_active_park_7f, ActivePark.ActiveParkElement.STOP)), TuplesKt.to(247, new ActivePark.UpdateBeam(R.string._94_vertical_parking, R.string._322_active_park_7f, ActivePark.ActiveParkElement.STOP)));
    }

    @Override // com.hzbhd.canbus.car._322.MsgMgr.Parser
    public void parse(int dataLength) {
        if (isDataChange()) {
            Log.i("_322_MsgMgr", "parse: 0x50");
            final ActivePark activePark = this.this$0.getActivePark(this.$context);
            final MsgMgr msgMgr = this.this$0;
            final Context context = this.$context;
            Log.i("_322_MsgMgr", "parse: active park");
            msgMgr.runOnUi(new AbstractMsgMgr.CallBackInterface() { // from class: com.hzbhd.canbus.car._322.MsgMgr$initParsers$1$15$$ExternalSyntheticLambda0
                @Override // com.hzbhd.canbus.msg_mgr.AbstractMsgMgr.CallBackInterface
                public final void callback() {
                    MsgMgr$initParsers$1$15.m563parse$lambda2$lambda1(activePark, msgMgr, this, context);
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: parse$lambda-2$lambda-1, reason: not valid java name */
    public static final void m563parse$lambda2$lambda1(ActivePark this_run, MsgMgr this$0, MsgMgr$initParsers$1$15 this$1, Context context) {
        Intrinsics.checkNotNullParameter(this_run, "$this_run");
        Intrinsics.checkNotNullParameter(this$0, "this$0");
        Intrinsics.checkNotNullParameter(this$1, "this$1");
        Intrinsics.checkNotNullParameter(context, "$context");
        this_run.setActiveParkActive(this$0.mCanbusInfoInt[3] != 0);
        ActivePark.UpdateBeam updateBeam = this$1.mUpdateBeamArray.get(Integer.valueOf(this$0.mCanbusInfoInt[3]));
        if (updateBeam != null) {
            this_run.updateMessageAndImage(updateBeam);
        }
        this_run.updateParkTypeStatus(this$0.mCanbusInfoInt[2]);
        if (CommUtil.isMiscReverse()) {
            this$0.updateParkUi(null, context);
        }
    }
}
